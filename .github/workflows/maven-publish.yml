name: Maven Package # 작업 이름 설정

on: # 트리거 설정
  release:
    types: [created] # 새 릴리즈 생성 시
  push: # 코드가 푸시될 때
  pull_request: # 풀 리퀘스트 생성 시

jobs:
  build: # 빌드 작업
    runs-on: ubuntu-latest # 운영체제 설정
    permissions: # 권한 설정
      contents: read
      packages: write

    env: # 환경 변수 설정
      SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/fakestore
      SPRING_DATASOURCE_USERNAME: storeuser
      SPRING_DATASOURCE_PASSWORD: cks147
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.mariadb.jdbc.Driver

    steps: # 작업 단계
    - name: Create user-defined network
      run: docker network create my_network # 사용자 정의 네트워크 생성

    - name: Run MariaDB container
      run: |
        docker run --name mariadb --network my_network -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=fakestore -e MYSQL_USER=storeuser -e MYSQL_PASSWORD=cks147 -p 3306:3306 -d mariadb:10.4.10 # MariaDB 컨테이너 실행

    - uses: actions/checkout@v3 # 저장소 체크아웃

    - name: Set up JDK 11
      uses: actions/setup-java@v3 # JDK 11 설정
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

		# For Debugging
    - name: List all running containers
      run: docker ps # 실행 중인 모든 컨테이너 나열

    - name: Build with Maven
      run: mvn -B package --file pom.xml -Ptest # Maven을 사용하여 패키지 빌드

    - name: Build with Maven
      run: mvn clean install # Maven을 사용하여 클린 및 설치
